// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes tasks using AI to manage large projects more easily.
 *
 * - summarizeTask - A function that summarizes a given task.
 * - TaskSummarizationInput - The input type for the summarizeTask function.
 * - TaskSummarizationOutput - The return type for the summarizeTask function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TaskSummarizationInputSchema = z.object({
  taskText: z.string().describe('The text content of the task to be summarized.'),
});
export type TaskSummarizationInput = z.infer<typeof TaskSummarizationInputSchema>;

const TaskSummarizationOutputSchema = z.object({
  summary: z.string().describe('A 50-word summary of the task.'),
});
export type TaskSummarizationOutput = z.infer<typeof TaskSummarizationOutputSchema>;

export async function summarizeTask(input: TaskSummarizationInput): Promise<TaskSummarizationOutput> {
  return summarizeTaskFlow(input);
}

const taskSummarizationPrompt = ai.definePrompt({
  name: 'taskSummarizationPrompt',
  input: {schema: TaskSummarizationInputSchema},
  output: {schema: TaskSummarizationOutputSchema},
  prompt: `Summarize the following task in 50 words or less:\n\n{{taskText}}`,
});

const summarizeTaskFlow = ai.defineFlow(
  {
    name: 'summarizeTaskFlow',
    inputSchema: TaskSummarizationInputSchema,
    outputSchema: TaskSummarizationOutputSchema,
  },
  async input => {
    const {output} = await taskSummarizationPrompt(input);
    return output!;
  }
);
